buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/releases/"}
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.3"
    }
}
allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/releases/"}
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs.add('-Xbootclasspath/p:./libs/framework.jar')
        }
    }
}

apply plugin: 'com.android.application'
android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.tzj.providers"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 210816
        versionName "v210816"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [
                    'src'
            ]
            res.srcDirs = [
                    'res'
            ]
        }
    }
    signingConfigs {
        release {
            keyAlias 'platform'
            keyPassword 'platform'
            storeFile file('./platform.keystore')
            storePassword 'platform'
        }
        debug {
            keyAlias 'platform'
            keyPassword 'platform'
            storeFile file('./platform.keystore')
            storePassword 'platform'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    compileOnly     files('./libs/framework.jar')
}

import groovy.xml.XmlUtil
preBuild {
    doLast {
//        def imlFile = parent.file(".idea/modules/"+project.name+"/"+rootProject.name+"."+project.name+".iml")
        def imlFile = file(".idea/"+project.name+".iml")
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            println(sdkString)
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            e.printStackTrace()
        }
    }
}
